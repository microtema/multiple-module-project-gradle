plugins {
    id "org.unbroken-dome.test-sets" version "3.0.1"
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

subprojects {

    group = 'de.microtema.gradle'
    version = '1.0-SNAPSHOT'
    description = "The $project.name API for the application"

    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'
    apply plugin: 'org.unbroken-dome.test-sets'
    apply plugin: 'jacoco'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    compileJava.options.encoding = 'utf-8'

    publishing {
        publications {
            "$project.name"(MavenPublication) {
                from components.java
            }
        }
    }

    dependencies {

        implementation 'org.apache.commons:commons-lang3:3.9'
        implementation 'commons-io:commons-io:2.6'
        implementation 'javax.validation:validation-api:2.0.1.Final'

        compileOnly 'org.projectlombok:lombok:1.18.16'
        annotationProcessor 'org.projectlombok:lombok:1.18.16'

        testImplementation 'org.junit.jupiter:junit-jupiter:5.4.2'
        testImplementation 'org.mockito:mockito-core:2.1.0'

        testImplementation'org.mockito:mockito-junit-jupiter:2.23.4'

        testImplementation 'de.microtema:model-builder:2.5.0'

        testCompileOnly 'org.projectlombok:lombok:1.18.16'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
    }

    testSets {
        integrationTest
    }

    check.dependsOn test, integrationTest
    integrationTest.mustRunAfter test

    integrationTest {
        outputs.upToDateWhen { false }
    }

    tasks.withType(Test) {
        useJUnitPlatform() // Make all tests use JUnit 5
        reports.html.destination = file("${reporting.baseDir}/${name}")
    }

    test {
        afterTest { desc, result ->
            println "Executing test [${desc.className}].${desc.name} with result: ${result.resultType}"
        }
    }

    integrationTest {
        afterTest { desc, result ->
            println "Executing test [${desc.className}].${desc.name} with result: ${result.resultType}"
        }
    }

    jacoco {
        toolVersion = "0.8.5"
    }

    jacocoTestReport {
        reports {
            xml.enabled false
            csv.enabled false
            html {
                enabled true
            }
        }
        executionData(test, integrationTest)
    }

    tasks.build.dependsOn jacocoTestReport
}
